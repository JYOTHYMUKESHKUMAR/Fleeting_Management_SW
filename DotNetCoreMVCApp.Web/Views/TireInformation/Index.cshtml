@model IEnumerable<DotNetCoreMVCApp.Models.Web.TireInformationViewModel>

@* @{
    ViewData["Title"] = "Manage Tire Information";
} *@

<link href="~/datatables/css/jquery.dataTables.min.css" rel="stylesheet" />

<style>
    
    .total-row {
        font-weight: bold;
        background-color: #f8f9fa;
    }

    .deactivated {
        background-color: #ffe6e6;
    }
</style>

<div class="container-fluid">
    <div class="card-header">
        <a asp-action="Create" class="btn btn-primary">Add New Tire</a>
        <a asp-action="Import" class="btn btn-primary">Import from file</a>
        <a asp-action="Export" class="btn btn-primary">Export</a>
    </div>
</div>

<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-12">
                <div class="report-header">
                    <h1 class="report-title">Tire Information Management</h1>
                </div>
            </div>
        </div>
    </div>
</section>

<section class="content">
    <div class="container-fluid">
        <div id="messageContainer" class="alert" style="display: none;"></div>

        @if (TempData["SuccessMessage"] != null)
        {
            <div id="successAlert" class="alert alert-success alert-dismissible fade show" role="alert">
                @TempData["SuccessMessage"]
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        }

        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        <table id="tireTable" class="table table-bordered table-striped">
                            <thead>
                                <tr>
                                    <th>Serial Number</th>
                                    <th>Size</th>
                                    <th>Brand</th>
                                    <th>Price</th>
                                    <th>Supplier</th>
                                    <th>Vehicle</th>
                                    <th>Installation Date</th>
                                    <th>Installation Odometer</th>
                                    <th>Removal Date</th>
                                    <th>Removal Odometer</th>
                                    <th>Status</th>
                                    <th>Notes</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr class="@(item.IsDeactivated ? "deactivated" : "")">
                                        <td>@item.TireSerialNumber</td>
                                        <td>@item.TireSize</td>
                                        <td>@item.TireBrand</td>
                                        <td>@item.TirePrice.ToString("N2")</td>
                                        <td>@item.Supplier</td>
                                        <td>@item.LicensePlate</td>
                                        <td>@item.InstallationDate.ToString("MM/dd/yyyy HH:mm")</td>
                                        <td>@item.InstallationOdometer.ToString("N2")</td>
                                        <td>@(item.RemovalDate?.ToString("MM/dd/yyyy HH:mm") ?? "N/A")</td>
                                        <td>@(item.RemovalOdometer?.ToString("N2") ?? "N/A")</td>
                                        <td>@(item.IsDeactivated ? "Deactivated" : "Active")</td>
                                        <td>@(item.Notes ?? "N/A")</td>
                                        <td>
                                            <div class="btn-group">
                                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-primary">
                                                    <i class="fas fa-edit"></i> Edit
                                                </a>
                                                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger"
                                                   onclick="return confirm('Are you sure you want to delete this tire record?');">
                                                    <i class="fas fa-trash"></i> Delete
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot class="total-row">
                                <tr>
                                    <td colspan="3">Totals:</td>
                                    <td>@Model.Sum(t => t.TirePrice).ToString("N2")</td>
                                    <td colspan="9"></td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@Html.AntiForgeryToken()

@section Scripts {
    <script src="~/datatables/js/jquery.dataTables.min.js"></script>
    <script>
        $(document).ready(function () {
            var table = $('#tireTable').DataTable({
                "paging": true,
                "lengthChange": true,
                "searching": true,
                "ordering": true,
                "info": true,
                "autoWidth": false,
                "responsive": true,
                "language": {
                    "emptyTable": "No tire records available"
                },
                "lengthMenu": [[10, 25, 50, 100, -1], [10, 25, 50, 100, "All"]],
                "pageLength": 25,
                "order": [[6, "desc"]], // Sort by Installation Date descending
                "columnDefs": [
                    {
                        "targets": [6, 8], // Date columns
                        "type": "date"
                    },
                    {
                        "targets": [3, 7, 9], // Numeric columns
                        "type": "num"
                    },
                    {
                        "targets": -1, // Actions column
                        "orderable": false
                    }
                ],
                "drawCallback": function (settings) {
                    var api = this.api();
                    var totalPrice = api.column(3, { page: 'current' })
                        .data()
                        .reduce(function (a, b) {
                            return parseFloat(a) + parseFloat(b.replace(/[^\d.-]/g, ''));
                        }, 0);

                    $(api.table().footer()).find('td:eq(3)').text(totalPrice.toLocaleString('en-US',
                        { minimumFractionDigits: 2, maximumFractionDigits: 2 }));
                }
            });

            // Initialize tooltips
            $('[data-toggle="tooltip"]').tooltip();

            // Message handling
            function showMessage(message, type) {
                var $messageContainer = $('#messageContainer');
                $messageContainer
                    .removeClass('alert-success alert-danger')
                    .addClass('alert-' + type)
                    .text(message)
                    .show();
                setTimeout(function () {
                    $messageContainer.fadeOut();
                }, 3000);
            }

            // Auto-hide success message
            setTimeout(function () {
                $('#successAlert').fadeOut();
            }, 3000);

            // Handle delete confirmation
            $('.btn-danger').on('click', function (e) {
                return confirm('Are you sure you want to delete this record? This action cannot be undone.');
            });
        });
    </script>
}